# MCP Integration Testing Configurations
# Comprehensive test configurations for VanguardAI migration system

test_configurations:
  version: "1.0.0"
  description: "Complete testing framework for MCP Notion integration system"
  
  # Test Environment Settings
  environment:
    test_mode: "integration"
    use_mock_api: true
    rate_limiting: false
    timeout_seconds: 30
    batch_size: 5
    max_retries: 3
    
  # Test Data Configuration
  test_data:
    vanguardai_test_set:
      total_items: 30
      databases:
        knowledge_vault: 5
        tools_services: 5
        business_ideas: 5
        training_vault: 5
        platforms_sites: 5
        notes_ideas: 5
      
    sample_items:
      knowledge_vault:
        - id: "test-framework-analysis"
          name: "Framework Analysis Methodology"
          category: "Methodologies"
          status: "Research"
          description: "Comprehensive approach to analyzing software frameworks"
          type: "Methodology"
          research_quality: 95
          priority: "High"
          tags: ["framework", "analysis", "methodology"]
          relationships:
            tools: ["@tools_services/analysis-tool"]
            
        - id: "test-design-patterns"
          name: "Essential Design Patterns"
          category: "Frameworks"
          status: "Production"
          description: "Core design patterns for enterprise applications"
          type: "Framework"
          research_quality: 90
          priority: "Critical"
          tags: ["design", "patterns", "enterprise"]
          
      tools_services:
        - id: "test-notion-api"
          name: "Notion API Integration"
          category: "APIs"
          status: "In_Use"
          description: "Notion API for database management"
          type: "API"
          performance_rating: 5
          website: "https://developers.notion.com"
          api_available: true
          documentation: "https://developers.notion.com/docs"
          relationships:
            knowledge: ["@knowledge_vault/test-framework-analysis"]
            
      business_ideas:
        - id: "test-knowledge-platform"
          name: "AI Knowledge Platform"
          category: "SaaS"
          status: "Concept"
          description: "AI-powered knowledge management platform"
          market_type: "B2B"
          revenue_model: "Subscription"
          priority: "High"
          tags: ["ai", "knowledge", "platform"]
          
  # Test Scenarios
  test_scenarios:
    unit_tests:
      - name: "Schema Validation Tests"
        description: "Validate YAML schema compliance"
        categories: ["schema", "validation"]
        expected_duration: 10
        
      - name: "Data Transformation Tests"
        description: "Test YAML to Notion format transformation"
        categories: ["transformation", "data"]
        expected_duration: 15
        
      - name: "API Client Tests"
        description: "Test Notion API client functionality"
        categories: ["api", "client"]
        expected_duration: 20
        
    integration_tests:
      - name: "End-to-End Migration Test"
        description: "Complete migration workflow test"
        categories: ["e2e", "migration"]
        expected_duration: 60
        requires_mock_data: true
        
      - name: "Relationship Resolution Test"
        description: "Cross-database relationship creation"
        categories: ["relationships", "integration"]
        expected_duration: 30
        
      - name: "Progress Monitoring Test"
        description: "Migration progress tracking"
        categories: ["monitoring", "progress"]
        expected_duration: 15
        
    performance_tests:
      - name: "Batch Processing Performance"
        description: "Test batch migration performance"
        categories: ["performance", "batch"]
        expected_duration: 45
        batch_sizes: [1, 5, 10]
        
      - name: "Error Recovery Performance"
        description: "Test error handling and recovery"
        categories: ["performance", "error"]
        expected_duration: 30
        error_rates: [0.05, 0.1, 0.2]
        
  # Validation Criteria
  validation_criteria:
    schema_validation:
      minimum_compliance_rate: 95
      required_fields_coverage: 100
      cross_reference_integrity: 100
      
    data_transformation:
      transformation_success_rate: 98
      property_mapping_accuracy: 100
      relationship_extraction_rate: 95
      
    api_integration:
      mock_api_response_rate: 100
      rate_limiting_compliance: 100
      error_handling_coverage: 95
      
    end_to_end:
      migration_success_rate: 95
      relationship_creation_rate: 90
      data_integrity_score: 98
      
  # Expected Test Results
  expected_results:
    total_test_count: 25
    minimum_pass_rate: 90
    critical_test_pass_rate: 100
    performance_thresholds:
      average_test_duration: 30
      total_suite_duration: 300
      
    critical_tests:
      - "Schema Validator Initialization"
      - "Data Transformer Initialization"
      - "API Client Initialization"
      - "Migration Config Creation"
      - "Full Dry-Run Migration"
      
  # Test Data Templates
  test_templates:
    minimal_knowledge_vault_item:
      id: "test-{counter}"
      name: "Test Item {counter}"
      category: "Testing"
      status: "Research"
      description: "Test item for validation"
      type: "Framework"
      
    complete_knowledge_vault_item:
      id: "complete-test-{counter}"
      name: "Complete Test Item {counter}"
      category: "Frameworks"
      status: "Production"
      description: "Complete test item with all properties"
      type: "Methodology"
      research_quality: 85
      priority: "High"
      tags: ["test", "complete", "validation"]
      relationships:
        tools: ["@tools_services/test-tool-{counter}"]
        ideas: ["@business_ideas/test-idea-{counter}"]
        
    minimal_tools_item:
      id: "test-tool-{counter}"
      name: "Test Tool {counter}"
      category: "Testing"
      status: "Evaluating"
      description: "Test tool for validation"
      type: "Tool"
      performance_rating: 3
      
  # Mock API Responses
  mock_responses:
    create_database:
      success:
        id: "mock_db_{counter}"
        object: "database"
        created_time: "2024-01-01T00:00:00.000Z"
        title:
          - type: "text"
            text:
              content: "{database_name}"
        properties: "{provided_properties}"
        
    create_page:
      success:
        id: "mock_page_{counter}"
        object: "page"
        created_time: "2024-01-01T00:00:00.000Z"
        parent:
          database_id: "{database_id}"
        properties: "{provided_properties}"
        
    error_responses:
      rate_limit:
        status: 429
        code: "rate_limited"
        message: "Rate limited"
        headers:
          Retry-After: "60"
          
      invalid_token:
        status: 401
        code: "unauthorized"
        message: "API token is invalid"
        
      not_found:
        status: 404
        code: "object_not_found"
        message: "Could not find object"
        
  # Test Reporting Configuration
  reporting:
    formats: ["json", "html", "junit"]
    include_performance_metrics: true
    include_error_details: true
    include_test_data_samples: true
    
    output_paths:
      json_report: "logs/integration_test_report_{timestamp}.json"
      html_report: "logs/integration_test_report_{timestamp}.html"
      junit_report: "logs/integration_test_junit_{timestamp}.xml"
      
    notification_settings:
      email_on_failure: false
      webhook_on_completion: false
      log_level: "INFO"
      
  # Continuous Integration Settings
  ci_integration:
    github_actions:
      trigger_on: ["pull_request", "push"]
      timeout_minutes: 15
      artifact_retention_days: 30
      
    test_stages:
      - name: "Quick Validation"
        command: "python integration_test_suite.py --quick"
        timeout: 60
        
      - name: "Full Test Suite"
        command: "python integration_test_suite.py"
        timeout: 600
        depends_on: ["Quick Validation"]
        
      - name: "Performance Tests"
        command: "python integration_test_suite.py --performance"
        timeout: 900
        depends_on: ["Full Test Suite"]
        optional: true
        
  # Debugging and Troubleshooting
  debugging:
    verbose_logging: true
    capture_api_requests: true
    save_intermediate_results: true
    preserve_test_data: false
    
    common_issues:
      - issue: "Schema validation failures"
        solution: "Check YAML syntax and required field presence"
        
      - issue: "Transformation errors"
        solution: "Verify property mappings and transformation rules"
        
      - issue: "Mock API failures"
        solution: "Check mock response configuration and API client setup"
        
      - issue: "Relationship resolution failures"
        solution: "Verify cross-reference format and target item existence"
        
  # Quality Gates
  quality_gates:
    required_for_merge:
      - test_pass_rate: ">= 95%"
      - critical_test_pass_rate: "100%"
      - no_high_severity_failures: true
      
    recommended_for_production:
      - test_pass_rate: ">= 98%"
      - performance_within_thresholds: true
      - all_relationship_tests_pass: true
      - end_to_end_tests_pass: true