# Validation Engine
# Comprehensive data integrity validation for the knowledge vault system
# Ensures consistency, completeness, and quality across all databases

validation_info:
  name: "Knowledge Vault Validation Engine"
  description: "Multi-layer validation system for data integrity and quality assurance"
  version: "1.0.0"
  created: "2024-07-21"
  last_updated: "2024-07-21"

# Validation Layers
validation_layers:
  
  # Layer 1: Schema Validation
  schema_validation:
    enabled: true
    strict_mode: true
    description: "Validate all items against their database schemas"
    
    validation_types:
      field_presence:
        required_fields: "Must be present and non-empty"
        optional_fields: "Validated if present"
        
      data_types:
        string_validation: "Length limits, pattern matching"
        number_validation: "Range checking, precision validation"
        date_validation: "Format validation, logical constraints"
        enum_validation: "Value must be in allowed set"
        array_validation: "Element type and count validation"
        
      format_validation:
        uuid_format: "Valid UUID v4 format"
        url_format: "Valid URL format and accessibility"
        email_format: "Valid email address format"
        
    validation_rules:
      per_database:
        knowledge_vault:
          required: ["id", "name", "priority", "status", "knowledge_type"]
          uuid_fields: ["id"]
          url_fields: ["source_url"]
          enum_fields: ["status", "priority", "complexity_level"]
          
        training_vault:
          required: ["id", "name", "status", "provider", "skill_level"]
          uuid_fields: ["id"]
          url_fields: ["course_url"]
          enum_fields: ["status", "skill_level", "delivery_method"]
          
        business_ideas:
          required: ["id", "name", "status", "idea_rating"]
          uuid_fields: ["id"]
          enum_fields: ["status", "market_size", "complexity_level"]
  
  # Layer 2: Relationship Validation
  relationship_validation:
    enabled: true
    description: "Validate cross-database relationships and references"
    
    validation_types:
      reference_integrity:
        target_exists: "Referenced items must exist in target database"
        source_exists: "Source items must exist in source database"
        format_valid: "Reference format must be correct"
        
      bidirectional_consistency:
        dual_property_exists: "Reverse relationship must exist"
        dual_property_consistent: "Both directions must be consistent"
        
      constraint_compliance:
        cardinality_limits: "Relationship cardinality constraints"
        relationship_rules: "Database-specific relationship rules"
        circular_prevention: "Prevent circular references"
        
    validation_rules:
      hub_spoke_validation:
        hub_connectivity: "All spoke items should connect to hub"
        spoke_isolation: "Detect isolated spoke items"
        
      cross_spoke_validation:
        direct_relationships: "Validate direct spoke-to-spoke relationships"
        relationship_paths: "Validate multi-hop relationship paths"
        
      self_reference_validation:
        notes_ideas: "Self-referencing relationships in notes database"
        circular_detection: "Prevent circular self-references"
  
  # Layer 3: Business Logic Validation
  business_logic_validation:
    enabled: true
    description: "Validate business rules and domain-specific constraints"
    
    validation_types:
      workflow_validation:
        status_transitions: "Valid status transitions per workflow"
        required_fields_per_status: "Status-dependent required fields"
        
      rating_consistency:
        rating_ranges: "Ratings within allowed ranges (1-5)"
        rating_logic: "High priority items should have high ratings"
        
      tag_validation:
        vocabulary_compliance: "Tags must exist in shared vocabulary"
        category_consistency: "Tag categories should be consistent"
        tag_limits: "Maximum tags per item limits"
        
    business_rules:
      knowledge_vault_rules:
        high_priority_content: "Priority 4-5 items must have detailed content"
        active_use_requirements: "Active use items need implementation steps"
        
      training_vault_rules:
        completion_logic: "Completed training must have completion date"
        certification_tracking: "Certificate earned items need certificate details"
        
      business_ideas_rules:
        launch_requirements: "Launched ideas need launch date and metrics"
        validation_evidence: "Validated ideas need customer evidence"
  
  # Layer 4: Quality Validation
  quality_validation:
    enabled: true
    description: "Assess content quality and completeness"
    
    quality_metrics:
      completeness_score:
        calculation: "Percentage of optional fields populated"
        weight_factors: "Important fields have higher weight"
        target_threshold: 0.8
        
      consistency_score:
        calculation: "Consistency across related items"
        factors: ["tag_consistency", "rating_alignment", "status_logic"]
        target_threshold: 0.85
        
      freshness_score:
        calculation: "How recently items have been updated"
        decay_factor: "Score decreases over time"
        target_threshold: 0.7
        
    quality_rules:
      content_quality:
        minimum_description_length: 50  # characters
        key_insights_required: "High priority items need insights"
        actionable_steps_encouraged: "Implementation guidance preferred"
        
      metadata_quality:
        tagging_completeness: "Items should have 3-8 tags"
        relationship_density: "Items should have meaningful relationships"
        source_attribution: "External sources should be cited"

# Validation Execution
validation_execution:
  
  validation_triggers:
    on_create:
      enabled: true
      validation_layers: ["schema", "relationship", "business_logic"]
      blocking: true
      
    on_update:
      enabled: true
      validation_layers: ["schema", "relationship", "business_logic", "quality"]
      blocking: false  # Allow updates with quality warnings
      
    scheduled_validation:
      enabled: true
      frequency: "daily"
      validation_layers: ["all"]
      full_system_scan: true
      
    on_demand:
      enabled: true
      validation_layers: ["configurable"]
      scope: "configurable"
  
  validation_process:
    parallel_validation:
      enabled: true
      max_parallel_threads: 4
      item_batch_size: 100
      
    incremental_validation:
      enabled: true
      change_tracking: true
      delta_validation: true
      
    error_handling:
      continue_on_error: true
      error_aggregation: true
      detailed_error_reporting: true
  
  performance_optimization:
    caching:
      schema_cache: true
      relationship_cache: true
      validation_result_cache: true
      
    indexing:
      validation_indexes: true
      error_tracking_indexes: true
      
    lazy_validation:
      enabled: true
      priority_based_validation: true

# Error Handling and Reporting
error_management:
  
  error_classification:
    blocking_errors:
      - "Schema validation failures"
      - "Required field missing"
      - "Invalid data types"
      - "Broken references"
      
    warning_errors:
      - "Quality threshold not met"
      - "Recommended fields missing"
      - "Tag vocabulary violations"
      - "Business rule violations"
      
    informational_errors:
      - "Optimization suggestions"
      - "Consistency improvements"
      - "Enhancement recommendations"
  
  error_reporting:
    error_details:
      error_code: "Unique identifier for error type"
      error_message: "Human-readable error description"
      affected_item: "Item ID and database"
      validation_layer: "Which layer detected the error"
      severity: "blocking|warning|info"
      suggested_fix: "Recommended corrective action"
      
    reporting_formats:
      detailed_report:
        includes: ["all_errors", "statistics", "trends"]
        frequency: "daily"
        
      summary_report:
        includes: ["error_counts", "critical_issues", "health_score"]
        frequency: "hourly"
        
      real_time_alerts:
        includes: ["blocking_errors", "critical_warnings"]
        delivery: "immediate"
  
  error_resolution:
    auto_fix_capabilities:
      format_normalization: true
      tag_normalization: true
      relationship_cleanup: false  # Manual review required
      
    resolution_tracking:
      error_lifecycle: "track from detection to resolution"
      resolution_time: "measure time to fix"
      recurrence_tracking: "track repeat errors"

# Validation Metrics and Analytics
metrics_analytics:
  
  system_health_metrics:
    overall_validation_score:
      calculation: "Weighted average of all validation scores"
      components: ["schema_compliance", "relationship_health", "business_logic_compliance", "quality_score"]
      target_score: 0.9
      
    error_rates:
      blocking_error_rate: "Percentage of items with blocking errors"
      warning_rate: "Percentage of items with warnings"
      trend_analysis: "Error rate trends over time"
      
    data_quality_trends:
      completeness_trend: "Improvement in data completeness"
      consistency_trend: "Relationship consistency improvements"
      freshness_trend: "Content freshness maintenance"
  
  database_specific_metrics:
    per_database_health:
      knowledge_vault: "Hub database health score"
      training_vault: "Learning content quality"
      business_ideas: "Business validation completeness"
      
    relationship_health:
      bidirectional_consistency: "Percentage of consistent relationships"
      orphan_rate: "Items without relationships"
      hub_connectivity: "Spoke database connectivity to hub"
  
  performance_metrics:
    validation_performance:
      validation_time: "Time to validate items"
      throughput: "Items validated per minute"
      resource_utilization: "CPU and memory usage"
      
    error_resolution_performance:
      mean_time_to_resolution: "Average time to fix errors"
      auto_fix_success_rate: "Percentage of auto-fixed errors"
      manual_intervention_rate: "Errors requiring manual fix"

# Integration and Configuration
integration:
  
  file_system_integration:
    validation_results_storage:
      location: "validation/results/"
      format: "yaml"
      retention: "30_days"
      
    error_logs:
      location: "validation/logs/"
      format: "structured_log"
      rotation: "daily"
      
    reports:
      location: "validation/reports/"
      format: ["yaml", "json", "html"]
      frequency_based_retention: true
  
  notification_integration:
    alert_channels:
      email_alerts: "Critical validation failures"
      system_notifications: "Real-time error notifications"
      dashboard_updates: "Continuous health status updates"
      
    escalation_rules:
      immediate_escalation: "Blocking errors affecting >10% of items"
      daily_escalation: "Persistent warning patterns"
      weekly_escalation: "Quality degradation trends"
  
  api_integration:
    validation_api:
      validate_item: "Validate single item"
      validate_batch: "Validate multiple items"
      validate_database: "Validate entire database"
      get_validation_status: "Retrieve validation results"
      
    reporting_api:
      get_health_metrics: "System health information"
      get_error_reports: "Error details and statistics"
      get_trends: "Historical validation trends"

# Configuration Management
configuration:
  
  validation_settings:
    global_settings:
      strict_validation: true
      auto_fix_enabled: true
      performance_monitoring: true
      detailed_logging: true
      
    layer_configuration:
      schema_validation_weight: 0.4
      relationship_validation_weight: 0.3
      business_logic_weight: 0.2
      quality_weight: 0.1
      
    threshold_configuration:
      blocking_threshold: 0.95  # Must pass 95% of blocking validations
      warning_threshold: 0.8    # Should pass 80% of warning validations
      quality_threshold: 0.7    # Target 70% quality score
  
  performance_tuning:
    batch_sizes:
      small_batch: 50
      medium_batch: 200
      large_batch: 1000
      
    timeout_settings:
      item_validation_timeout: 30  # seconds
      relationship_validation_timeout: 60  # seconds
      full_system_validation_timeout: 3600  # 1 hour
      
    resource_limits:
      max_memory_usage: "1GB"
      max_cpu_usage: "80%"
      max_parallel_threads: 8
  
  feature_toggles:
    advanced_quality_validation: true
    semantic_validation: false  # Future feature
    ai_powered_suggestions: false  # Future feature
    cross_system_validation: true