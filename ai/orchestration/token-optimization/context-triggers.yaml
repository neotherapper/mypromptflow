# Context-Aware Optimization Triggers - SuperClaude Token System
# Automatic optimization activation based on context analysis

context_triggers:
  version: "1.0"
  description: "Automatic token optimization triggers for 70% reduction"
  
  # Primary Activation Triggers
  token_usage_triggers:
    basic_compression:
      threshold: "50%"
      context_window_usage: "4096+ tokens"
      trigger_conditions:
        - "Token count exceeds 2048"
        - "Document length > 5000 characters"
        - "Multiple document generation requests"
        - "Repetitive content patterns detected"
      
      activation_signals:
        - "Verbose explanations present"
        - "Redundant information detected"
        - "Standard formatting overhead"
        - "Basic optimization potential identified"
    
    moderate_compression:
      threshold: "65%"
      context_window_usage: "6144+ tokens"
      trigger_conditions:
        - "Token count exceeds 4096"
        - "Document length > 10000 characters"
        - "Complex multi-step processes"
        - "Extensive research requirements"
      
      activation_signals:
        - "High conceptual density"
        - "Technical jargon frequency"
        - "Structured data tables"
        - "Moderate optimization potential"
    
    comprehensive_compression:
      threshold: "75%"
      context_window_usage: "8192+ tokens"
      trigger_conditions:
        - "Token count exceeds 6144"
        - "Document length > 20000 characters"
        - "Critical token conservation needed"
        - "Maximum efficiency required"
      
      activation_signals:
        - "Ultra-high content density"
        - "Complex technical specifications"
        - "Comprehensive documentation"
        - "Maximum optimization potential"

  # Content Type Triggers
  content_analysis_triggers:
    research_documents:
      activation_keywords:
        - "research", "analysis", "investigation", "study"
        - "methodology", "findings", "conclusion", "recommendation"
        - "hypothesis", "validation", "testing", "evaluation"
      
      complexity_indicators:
        - "Multiple research phases"
        - "Extensive literature review"
        - "Complex data analysis"
        - "Multi-domain investigation"
      
      optimization_priority: "high"
      default_compression: "moderate"
    
    technical_specifications:
      activation_keywords:
        - "specification", "implementation", "architecture", "design"
        - "configuration", "deployment", "integration", "testing"
        - "requirements", "constraints", "dependencies"
      
      complexity_indicators:
        - "Multi-component systems"
        - "Detailed technical requirements"
        - "Complex integration patterns"
        - "Extensive configuration options"
      
      optimization_priority: "high"
      default_compression: "moderate"
    
    workflow_documentation:
      activation_keywords:
        - "process", "workflow", "procedure", "guideline"
        - "step", "phase", "stage", "milestone"
        - "task", "activity", "action", "operation"
      
      complexity_indicators:
        - "Multi-step processes"
        - "Branching decision points"
        - "Parallel activities"
        - "Complex dependencies"
      
      optimization_priority: "medium"
      default_compression: "basic"
    
    progress_reports:
      activation_keywords:
        - "progress", "status", "update", "report"
        - "milestone", "deliverable", "achievement", "completion"
        - "timeline", "schedule", "deadline", "target"
      
      complexity_indicators:
        - "Multiple project streams"
        - "Detailed progress tracking"
        - "Complex milestone structures"
        - "Extensive status reporting"
      
      optimization_priority: "medium"
      default_compression: "basic"

  # Dynamic Context Analysis
  dynamic_triggers:
    real_time_monitoring:
      token_consumption_rate:
        measurement_window: "5 minutes"
        threshold_high: "1000 tokens/minute"
        threshold_critical: "2000 tokens/minute"
        
        actions:
          high_consumption: "Activate moderate compression"
          critical_consumption: "Activate comprehensive compression"
          sustained_high: "Switch to UltraCompressed mode"
      
      context_window_pressure:
        monitoring_frequency: "Real-time"
        warning_threshold: "70%"
        critical_threshold: "85%"
        
        responses:
          warning: "Prepare compression activation"
          critical: "Immediate compression activation"
          overflow_risk: "Emergency UltraCompressed mode"
    
    pattern_recognition:
      repetitive_content:
        detection_threshold: "3+ similar patterns"
        action: "Activate symbol notation"
        compression_type: "Pattern-based"
      
      verbose_explanations:
        detection_metrics: "Average sentence length > 25 words"
        action: "Activate structural compression"
        compression_type: "Explanation reduction"
      
      redundant_information:
        detection_method: "Semantic similarity analysis"
        similarity_threshold: "85%"
        action: "Activate redundancy elimination"
        compression_type: "Content deduplication"

  # Contextual Intelligence Triggers
  intelligence_triggers:
    user_behavior_analysis:
      interaction_patterns:
        - "Frequent long-form requests"
        - "Complex multi-part questions"
        - "Extensive documentation needs"
        - "Research-heavy workflows"
      
      adaptation_strategy:
        - "Proactive compression activation"
        - "Context-aware optimization"
        - "Personalized compression levels"
        - "Learning from user preferences"
    
    task_complexity_assessment:
      complexity_metrics:
        - "Number of subtasks"
        - "Cross-domain requirements"
        - "Multi-step dependencies"
        - "Extensive output requirements"
      
      automatic_optimization:
        simple_tasks: "No compression needed"
        moderate_tasks: "Basic compression"
        complex_tasks: "Moderate compression"
        ultra_complex: "Comprehensive compression"
    
    domain_expertise_triggers:
      specialized_domains:
        ai_research:
          keywords: ["AI", "ML", "NLP", "neural", "training"]
          optimization: "Technical symbol notation"
          compression: "Moderate to comprehensive"
        
        software_development:
          keywords: ["code", "API", "framework", "deployment"]
          optimization: "Technical abbreviations"
          compression: "Basic to moderate"
        
        business_strategy:
          keywords: ["strategy", "KPI", "ROI", "stakeholder"]
          optimization: "Business symbol notation"
          compression: "Basic to moderate"
        
        research_methodology:
          keywords: ["methodology", "hypothesis", "validation"]
          optimization: "Research symbol notation"
          compression: "Moderate to comprehensive"

  # Automatic Activation Logic
  activation_logic:
    decision_tree:
      step_1: "Measure current token usage"
      step_2: "Analyze content type and complexity"
      step_3: "Assess user context and preferences"
      step_4: "Calculate optimization potential"
      step_5: "Select appropriate compression level"
      step_6: "Activate optimization strategies"
    
    priority_matrix:
      high_priority_scenarios:
        - "Token usage > 75%"
        - "Critical optimization needed"
        - "Complex technical documentation"
        - "Research-heavy workflows"
      
      medium_priority_scenarios:
        - "Token usage 50-75%"
        - "Moderate optimization beneficial"
        - "Standard documentation tasks"
        - "Regular workflow processes"
      
      low_priority_scenarios:
        - "Token usage < 50%"
        - "Simple tasks"
        - "Basic documentation"
        - "Single-step processes"
    
    override_conditions:
      user_preferences:
        - "Explicit compression requests"
        - "Quality over compression settings"
        - "Specific formatting requirements"
        - "Custom optimization profiles"
      
      quality_thresholds:
        - "Readability below 70%"
        - "Accuracy below 95%"
        - "Usability below 80%"
        - "Completeness below 90%"

  # Performance Monitoring
  performance_monitoring:
    effectiveness_metrics:
      token_reduction_achieved:
        target: "70%"
        acceptable_range: "60-80%"
        measurement_frequency: "Per session"
      
      quality_preservation:
        readability_score: "Minimum 70%"
        accuracy_score: "Minimum 95%"
        completeness_score: "Minimum 90%"
        measurement_method: "Automated analysis"
      
      user_satisfaction:
        feedback_collection: "Post-session surveys"
        satisfaction_target: "85%"
        improvement_threshold: "Below 80%"
    
    adaptive_learning:
      pattern_recognition:
        - "Successful compression patterns"
        - "User preference patterns"
        - "Context-specific optimizations"
        - "Quality-compression balance"
      
      continuous_improvement:
        - "Trigger threshold adjustment"
        - "Compression algorithm refinement"
        - "Context recognition enhancement"
        - "Performance optimization"

  # Integration Specifications
  integration_specifications:
    system_integration:
      command_system: "Automatic flag addition"
      document_generation: "Seamless compression activation"
      workflow_orchestration: "Context-aware optimization"
      agent_coordination: "Compressed communication protocols"
    
    api_integration:
      trigger_endpoints:
        - "/api/compression/analyze"
        - "/api/compression/activate"
        - "/api/compression/monitor"
        - "/api/compression/optimize"
      
      response_formats:
        - "Compression recommendation"
        - "Optimization status"
        - "Performance metrics"
        - "Quality indicators"
    
    error_handling:
      fallback_strategies:
        - "Gradual compression degradation"
        - "Quality threshold maintenance"
        - "User notification systems"
        - "Manual override capabilities"
      
      recovery_procedures:
        - "Compression failure recovery"
        - "Quality degradation response"
        - "Context loss prevention"
        - "System stability maintenance"