---
# Dependency Chain Validation Rules
# Complete validation system for 4 critical dependency chains

validation_system:
  version: "1.0"
  description: "Comprehensive validation rules for critical document dependency chains"
  total_document_types: 67
  critical_chains: 4
  
# 4 Critical Dependency Chains
critical_chains:
  strategic_to_product:
    name: "Strategic → Product Chain"
    description: "Strategic business planning through product development"
    chain_id: "strategic_product"
    documents:
      - business_model_canvas
      - product_strategy
      - prd
      - user_stories
      - feature_specifications
      - acceptance_criteria
    dependencies:
      business_model_canvas: []
      product_strategy: [business_model_canvas]
      prd: [product_strategy, business_model_canvas]
      user_stories: [prd]
      feature_specifications: [user_stories, prd]
      acceptance_criteria: [feature_specifications, user_stories]
    quality_gates:
      - "Business Model Canvas must define clear value propositions"
      - "Product Strategy must align with business model"
      - "PRD must contain measurable success metrics"
      - "User Stories must have clear acceptance criteria"
      - "Feature Specifications must be technically implementable"
      - "Acceptance Criteria must be testable"

  research_to_design:
    name: "User Research → Design Chain"
    description: "User research through design system implementation"
    chain_id: "research_design"
    documents:
      - user_research_plans
      - user_personas
      - journey_maps
      - design_system
      - wireframes
      - prototype_documentation
    dependencies:
      user_research_plans: []
      user_personas: [user_research_plans]
      journey_maps: [user_personas, user_research_plans]
      design_system: [journey_maps, user_personas]
      wireframes: [design_system, journey_maps]
      prototype_documentation: [wireframes, design_system]
    quality_gates:
      - "User Research Plans must define clear objectives"
      - "User Personas must be based on actual research data"
      - "Journey Maps must identify pain points and opportunities"
      - "Design System must provide consistent UI components"
      - "Wireframes must follow design system guidelines"
      - "Prototype Documentation must be testable"

  business_to_technical:
    name: "Business → Technical Chain"
    description: "Business requirements through technical implementation"
    chain_id: "business_technical"
    documents:
      - business_requirements
      - system_architecture
      - api_documentation
      - database_design
      - technical_specifications
    dependencies:
      business_requirements: []
      system_architecture: [business_requirements]
      api_documentation: [system_architecture]
      database_design: [system_architecture, business_requirements]
      technical_specifications: [api_documentation, database_design, system_architecture]
    quality_gates:
      - "Business Requirements must be measurable and testable"
      - "System Architecture must support scalability requirements"
      - "API Documentation must follow OpenAPI 3.0 standards"
      - "Database Design must support data integrity"
      - "Technical Specifications must be implementable"

  requirements_to_testing:
    name: "Requirements → Testing Chain"
    description: "Requirements validation through quality assurance"
    chain_id: "requirements_testing"
    documents:
      - functional_requirements
      - test_plans
      - test_cases
      - quality_assurance
      - user_acceptance_testing
    dependencies:
      functional_requirements: []
      test_plans: [functional_requirements]
      test_cases: [test_plans, functional_requirements]
      quality_assurance: [test_cases, test_plans]
      user_acceptance_testing: [quality_assurance, test_cases]
    quality_gates:
      - "Functional Requirements must be complete and unambiguous"
      - "Test Plans must achieve minimum 80% coverage"
      - "Test Cases must be executable and repeatable"
      - "Quality Assurance must validate all requirements"
      - "User Acceptance Testing must involve actual users"

# Cross-Chain Validation Dependencies
cross_chain_dependencies:
  strategic_product_to_business_technical:
    description: "Product requirements must align with technical capabilities"
    validations:
      - "PRD requirements must be technically feasible"
      - "Feature specifications must have corresponding technical specs"
      - "Acceptance criteria must be technically testable"
  
  research_design_to_requirements_testing:
    description: "Design requirements must be testable"
    validations:
      - "User journey maps must have corresponding test scenarios"
      - "Design system components must be testable"
      - "Prototype documentation must inform UAT plans"
  
  business_technical_to_requirements_testing:
    description: "Technical specifications must be comprehensively tested"
    validations:
      - "API documentation must have corresponding test cases"
      - "Database design must have data integrity tests"
      - "System architecture must have performance tests"

# Validation Rules
validation_rules:
  chain_completeness:
    description: "Verify all required documents in chain are present"
    rules:
      - "All documents in chain must exist"
      - "Each document must meet minimum quality standards"
      - "Document structure must follow template requirements"
      - "All mandatory fields must be completed"
    
  dependency_satisfaction:
    description: "Verify prerequisite documents are completed before dependents"
    rules:
      - "Dependencies must be resolved before dependent creation"
      - "Dependent documents must reference prerequisite content"
      - "Version consistency must be maintained across dependencies"
      - "Circular dependencies must be prevented"
    
  logical_flow:
    description: "Verify proper sequence and logical progression"
    rules:
      - "Documents must follow logical sequence order"
      - "Information flow must be coherent and consistent"
      - "Assumptions must be validated across chain"
      - "Conflicts between documents must be resolved"
    
  quality_standards:
    description: "Verify documents meet tier-appropriate quality levels"
    rules:
      - "Tier 1 documents must achieve 90-95% quality score"
      - "Tier 2 documents must achieve 80-89% quality score"
      - "Tier 3 documents must achieve 70-79% quality score"
      - "Tier 4 documents must achieve 60-69% quality score"
    
  cross_chain_integration:
    description: "Verify chains work together properly"
    rules:
      - "Cross-chain references must be valid and current"
      - "Shared concepts must be consistently defined"
      - "Integration points must be clearly documented"
      - "Data flows between chains must be validated"

# Error Detection and Resolution
error_detection:
  missing_documents:
    description: "Detect missing documents in chains"
    checks:
      - "Scan for required documents in each chain"
      - "Identify gaps in document sequence"
      - "Check for incomplete document stubs"
      - "Verify document accessibility"
    
  broken_dependencies:
    description: "Detect broken or invalid dependencies"
    checks:
      - "Verify all dependency references exist"
      - "Check for circular dependency loops"
      - "Validate version compatibility"
      - "Ensure dependency completeness"
    
  quality_violations:
    description: "Detect quality standard violations"
    checks:
      - "Measure document completeness scores"
      - "Validate required field completion"
      - "Check template compliance"
      - "Assess content quality metrics"
    
  consistency_issues:
    description: "Detect inconsistencies across chains"
    checks:
      - "Compare shared terminology usage"
      - "Validate data model consistency"
      - "Check requirement alignment"
      - "Verify assumption compatibility"

# Resolution Strategies
resolution_strategies:
  missing_documents:
    actions:
      - "Create document from template"
      - "Populate with minimum required content"
      - "Link to existing related documents"
      - "Schedule for completion prioritization"
    
  broken_dependencies:
    actions:
      - "Update dependency references"
      - "Resolve circular dependencies"
      - "Synchronize document versions"
      - "Create missing dependency documents"
    
  quality_violations:
    actions:
      - "Enhance document content"
      - "Complete missing required fields"
      - "Improve template compliance"
      - "Conduct quality review"
    
  consistency_issues:
    actions:
      - "Standardize terminology usage"
      - "Align data model definitions"
      - "Reconcile requirement conflicts"
      - "Validate assumption consistency"

# Performance Metrics
performance_metrics:
  chain_completion_rate:
    description: "Percentage of chains with all documents completed"
    target: "> 80%"
    calculation: "completed_chains / total_chains * 100"
    
  dependency_satisfaction_rate:
    description: "Percentage of dependencies properly satisfied"
    target: "> 95%"
    calculation: "satisfied_dependencies / total_dependencies * 100"
    
  quality_compliance_rate:
    description: "Percentage of documents meeting quality standards"
    target: "> 85%"
    calculation: "compliant_documents / total_documents * 100"
    
  cross_chain_integration_score:
    description: "Assessment of cross-chain integration quality"
    target: "> 75%"
    calculation: "valid_integrations / total_integrations * 100"

# Success Criteria
success_criteria:
  chain_validation:
    - "All 4 critical chains achieve 100% document completion"
    - "All dependencies are properly satisfied"
    - "Quality standards are met across all tiers"
    - "Cross-chain integration is validated"
    
  system_validation:
    - "Validation system processes all 67 document types"
    - "Error detection accuracy > 95%"
    - "Resolution strategies are effective"
    - "Performance metrics meet targets"
    
  integration_validation:
    - "Validation integrates with existing command system"
    - "Automated validation triggers work correctly"
    - "Quality assurance processes are enhanced"
    - "Documentation standards are maintained"

# Validation Triggers
validation_triggers:
  document_creation:
    description: "Validate when new documents are created"
    actions:
      - "Check dependency prerequisites"
      - "Validate document structure"
      - "Assess quality standards"
      - "Update chain status"
    
  document_modification:
    description: "Validate when documents are modified"
    actions:
      - "Validate consistency with dependents"
      - "Check quality impact"
      - "Update dependency relationships"
      - "Reassess chain completion"
    
  chain_completion:
    description: "Validate when chains are marked complete"
    actions:
      - "Comprehensive chain validation"
      - "Cross-chain integration check"
      - "Quality gate verification"
      - "Final approval process"
    
  scheduled_validation:
    description: "Regular validation maintenance"
    frequency: "daily"
    actions:
      - "System health check"
      - "Performance metrics update"
      - "Error pattern analysis"
      - "Resolution strategy effectiveness"

# Integration Points
integration_points:
  command_system:
    description: "Integration with existing command system"
    commands:
      - "validate chain [chain_id]"
      - "validate document [document_id]"
      - "validate dependencies [document_id]"
      - "validate quality [document_id]"
    
  document_registry:
    description: "Integration with document registry system"
    functions:
      - "Track document completion status"
      - "Maintain dependency relationships"
      - "Store validation results"
      - "Monitor quality metrics"
    
  quality_assurance:
    description: "Integration with quality assurance system"
    functions:
      - "Enforce quality standards"
      - "Validate compliance requirements"
      - "Generate quality reports"
      - "Track improvement metrics"
    
  template_system:
    description: "Integration with template system"
    functions:
      - "Validate template compliance"
      - "Ensure structure consistency"
      - "Support document generation"
      - "Maintain template standards"