# Gemini AI Research Orchestrator Integration Layer
# AI INSTRUCTIONS: This file provides comprehensive integration instructions for Gemini to use the research orchestrator
# FILE REFERENCES: Direct file paths for Gemini to access orchestrator components

metadata:
  version: "2.0.0"
  last_updated: "2024-07-04"
  purpose: "Enable Gemini to use YAML-based research orchestrator system with automatic research detection"
  target: "Gemini AI agents working with research framework"
  adapted_from: "claude-orchestrator-integration.yaml"

# GEMINI FILE REFERENCE PATTERNS
orchestrator_file_references:
  config_files:
    context_analyzer: "research/orchestrator/engines/context-analyzer.yaml"
    method_registry: "research/orchestrator/config/method-registry.yaml"
    selection_rules: "research/orchestrator/config/selection-rules.yaml"
  
  method_files:
    existing_methods: "research/orchestrator/methods/existing/"
    advanced_methods: "research/orchestrator/methods/advanced/"
    methods_index: "research/orchestrator/methods/methods-index.yaml"
  
  integration_files:
    workflow_orchestrator: "research/orchestrator/integration/workflow-orchestrator.yaml"
    gemini_integration: "research/orchestrator/integration/gemini-orchestrator-integration.yaml"
  
  gemini_usage_notes:
    - "Use file reading capabilities to access these exact paths"
    - "Gemini can process large configuration files efficiently"
    - "No special prefixes needed for research/ folder access"
    - "Files are organized for systematic orchestrator workflow"
    - "Leverage Gemini's multimodal capabilities for comprehensive analysis"

# RESEARCH INTENTION DETECTION (GEMINI-OPTIMIZED)
research_intention_detection:
  automatic_triggers:
    direct_keywords:
      - "research"
      - "analyze"
      - "investigate"
      - "explore"
      - "study"
      - "examine"
      - "assess"
      - "evaluate"
      - "deep dive"
      - "comprehensive look"
    
    gemini_specific_patterns:
      - "break down for me"
      - "help me understand the nuances"
      - "what should I know about"
      - "give me insights into"
      - "explore the connections between"
      - "analyze the implications"
    
    context_indicators:
      - multi_domain_questions: "contains 'and', 'intersection', 'impact on', 'relationship between'"
      - complex_scenarios: "emerging technology, ethical implications, future trends, market dynamics"
      - comparative_analysis: "compare", "contrast", "versus", "differences between", "trade-offs"
      - strategic_planning: "strategy", "roadmap", "implementation", "approach", "best practices"
      - technical_deep_dive: "architecture", "system design", "technical analysis", "implementation details"
  
  gemini_activation_conditions:
    always_use_orchestrator:
      - "User explicitly requests research or analysis"
      - "Question involves multiple domains or perspectives"
      - "Request requires structured systematic approach"
      - "Topic involves emerging or complex technologies"
      - "User asks for comprehensive coverage or insights"
      - "Request involves data analysis or pattern recognition"
    
    leverage_gemini_strengths:
      - "Multimodal content analysis (text, images, code)"
      - "Large context window for comprehensive analysis"
      - "Pattern recognition across diverse data types"
      - "Real-time reasoning and adaptive thinking"
      - "Integration of multiple information sources"
    
    skip_orchestrator:
      - "Simple factual questions with direct answers"
      - "Code generation or debugging tasks"
      - "Direct file operations or transformations"
      - "Basic conversational or clarification queries"
      - "Simple calculation or formatting requests"

# GEMINI ORCHESTRATOR USAGE WORKFLOW
gemini_orchestrator_workflow:
  # IMPORTANT: Gemini agents MUST internalize and strictly follow these workflow steps.
  # Failure to adhere to this workflow will result in incomplete or non-compliant research outputs.
  # Each step is designed to leverage Gemini's strengths and ensure high-quality research.

  step_1_detect_research_intent:
    process: "Analyze user request using Gemini's advanced pattern recognition"
    gemini_advantages:
      - "Superior context understanding from large context window"
      - "Better nuance detection in user requests"
      - "Enhanced pattern matching across request types"
    
    output: "decision: use_orchestrator | skip_orchestrator | uncertain"
    
    gemini_specific_handling:
      - "Leverage multimodal capabilities if user provides images/documents"
      - "Use real-time reasoning for ambiguous requests"
      - "Apply contextual understanding for implicit research needs"
  
  step_2_extract_context:
    gemini_enhanced_extraction:
      - "Use advanced NLP for parameter inference"
      - "Leverage context window for comprehensive understanding"
      - "Apply semantic analysis for quality requirements"
    
    required_parameters:
      - research_topic: "Main subject extracted with semantic understanding"
      - quality_requirements: "Inferred from language patterns and context"
      - time_constraints: "Detected from urgency indicators and context"
    
    gemini_specific_parameters:
      - information_density: "high|medium|low - based on user's information needs"
      - reasoning_depth: "surface|analytical|deep - inferred from request complexity"
      - connection_mapping: "local|cross_domain|global - based on scope indicators"
      - output_style: "technical|business|academic|general - adapted to user context"
    
    extraction_examples:
      conversational_request:
        input: "I'm trying to understand how AI might change education in the next decade"
        gemini_output:
          research_topic: "AI transformation in education sector"
          research_scope: "broad"
          quality_requirements: "high"
          time_constraints: "normal"
          domain_specificity: "cross_domain"
          reasoning_depth: "analytical"
          connection_mapping: "cross_domain"
          output_style: "general"
      
      technical_request:
        input: "Analyze the architectural implications of implementing federated learning in healthcare systems"
        gemini_output:
          research_topic: "federated learning architecture in healthcare"
          research_scope: "narrow"
          quality_requirements: "critical"
          time_constraints: "extended"
          domain_specificity: "specialized"
          reasoning_depth: "deep"
          connection_mapping: "local"
          output_style: "technical"
  
  step_3_run_context_analysis:
    gemini_enhanced_analysis:
      - "Use advanced pattern recognition for complexity assessment"
      - "Apply semantic understanding for domain mapping"
      - "Leverage reasoning capabilities for context evaluation"
    
    reference_file: "research/orchestrator/engines/context-analyzer.yaml"
    
    gemini_specific_process:
      complexity_assessment:
        - semantic_complexity: "Analyze conceptual relationships and abstractions"
        - interdisciplinary_scope: "Detect cross-domain connections and implications"
        - temporal_complexity: "Assess time-sensitive or evolving aspects"
        - stakeholder_complexity: "Identify multiple perspectives and interests"
      
      domain_analysis:
        - domain_boundary_detection: "Identify primary and secondary domains"
        - expertise_level_assessment: "Determine technical depth required"
        - context_pattern_matching: "Match against known research patterns"
        - gemini_optimization: "Identify areas where Gemini excels"
    
    output_format:
      complexity_level: "simple|moderate|complex|highly_complex"
      domain_type: "single|multi|cross_domain|emerging|hybrid"
      quality_level: "basic|high|critical|exceptional"
      confidence_score: "0.0-1.0"
      gemini_suitability: "high|medium|low"
  
  step_4_select_methods:
    gemini_optimized_selection:
      - "Prioritize methods that leverage Gemini's strengths"
      - "Consider multimodal capabilities in method selection"
      - "Optimize for large context window utilization"
      - "Factor in real-time reasoning capabilities"
    
    reference_files:
      - "research/orchestrator/config/selection-rules.yaml"
      - "research/orchestrator/config/method-registry.yaml"
    
    gemini_selection_enhancements:
      primary_method_selection:
        - gemini_strength_matching: "Select methods that align with Gemini capabilities"
        - context_window_optimization: "Prefer methods that benefit from large context"
        - multimodal_integration: "Include methods that can leverage diverse inputs"
        - reasoning_intensive_preference: "Favor methods requiring complex reasoning"
      
      enhancement_selection:
        - gemini_quality_boosters: "Methods that enhance Gemini's natural abilities"
        - adaptive_reasoning: "Methods that leverage Gemini's adaptive thinking"
        - pattern_synthesis: "Methods that combine multiple information sources"
        - real_time_validation: "Methods that benefit from immediate reasoning"
    
    output_format:
      selected_methods:
        primary: ["method_name"]
        enhancement: ["method_name"]
        gemini_optimized: ["method_name"]
      execution_pattern: "sequential|parallel|hybrid|adaptive"
      estimated_duration: "time estimate with Gemini efficiency factors"
      selection_rationale: "explanation including Gemini-specific advantages"
  
  step_5_execute_methods:
    # MANDATORY: Use the content of the selected method's .md file to generate internal prompts for sub-tasks.
    # These internal prompts and their outputs MUST be logged in the research-execution-log.yaml.
    gemini_execution_advantages:
      - "Leverage large context window for comprehensive analysis"
      - "Use multimodal capabilities for diverse input processing"
      - "Apply real-time reasoning for adaptive execution"
      - "Utilize advanced pattern recognition for insight generation"
    
    method_access:
      existing_methods: "research/orchestrator/methods/existing/[method_name].md"
      advanced_methods: "research/orchestrator/methods/advanced/[method_name].md"
      gemini_adaptations: "Apply Gemini-specific enhancements to each method"
    
    execution_guidance:
      preparation_steps: "Enhanced with Gemini's contextual understanding"
      execution_sequence: "Optimized for Gemini's processing capabilities"
      quality_checkpoints: "Leveraging Gemini's real-time validation"
      success_metrics: "Adapted for Gemini's output characteristics"
    
    gemini_specific_quality_validation:
      contextual_consistency: "Validate coherence across large context window"
      multimodal_alignment: "Ensure consistency across different input types"
      reasoning_validation: "Verify logical flow and reasoning quality"
      adaptive_quality_control: "Real-time quality adjustment during execution"
  
  step_6_orchestrator_summary:
    gemini_enhanced_summary:
      - "Provide comprehensive analysis leveraging Gemini's capabilities"
      - "Include multimodal insights where applicable"
      - "Demonstrate reasoning process and connections"
      - "Offer adaptive recommendations based on context"
    
    format: "Use gemini_output_templates.orchestrator_summary_template"
    gemini_specific_enhancements:
      - contextual_depth: "Deeper analysis enabled by large context window"
      - connection_mapping: "Explicit relationship identification"
      - adaptive_insights: "Dynamic recommendations based on real-time analysis"
      - multimodal_integration: "Incorporate diverse information sources"

# GEMINI DECISION TREES
gemini_decision_trees:
  research_activation_decision:
    gemini_pattern_recognition:
      if: "complex_pattern_detected OR multimodal_input_present"
      then: "activate_orchestrator"
      confidence: "high"
      rationale: "Gemini excels at complex pattern analysis"
    
    context_window_utilization:
      if: "large_context_beneficial OR comprehensive_analysis_needed"
      then: "activate_orchestrator"
      confidence: "high"
      rationale: "Leverage Gemini's large context window"
    
    adaptive_reasoning_needed:
      if: "dynamic_problem OR evolving_requirements"
      then: "activate_orchestrator"
      confidence: "medium"
      rationale: "Gemini's adaptive reasoning capabilities"
    
    multimodal_advantage:
      if: "diverse_input_types OR cross_format_analysis"
      then: "activate_orchestrator"
      confidence: "high"
      rationale: "Gemini's multimodal capabilities"
  
  gemini_method_selection_decision_tree:
    leverage_gemini_strengths:
      context_window_advantage:
        if: "large_information_synthesis_needed"
        then: "multi_perspective_approach + ensemble_methods"
        enhancement: "constitutional_ai for validation"
      
      pattern_recognition_advantage:
        if: "complex_pattern_analysis_required"
        then: "tree_of_thoughts + adaptive_chain_of_thought"
        enhancement: "self_consistency for verification"
      
      multimodal_advantage:
        if: "diverse_input_types_present"
        then: "domain_adaptive + complex_research"
        enhancement: "gemini_specific_validation"
      
      real_time_reasoning_advantage:
        if: "adaptive_analysis_needed"
        then: "iterative_research_refinement + textgrad_iterative"
        enhancement: "constitutional_ai for continuous validation"
  
  gemini_execution_pattern_decision:
    parallel_optimization:
      if: "gemini_can_handle_parallel_processing"
      then: "parallel"
      rationale: "Gemini's processing capabilities support parallel execution"
    
    adaptive_execution:
      if: "real_time_adaptation_beneficial"
      then: "adaptive"
      rationale: "Gemini's adaptive reasoning enables dynamic execution"
    
    context_integrated_execution:
      if: "large_context_window_beneficial"
      then: "hybrid"
      rationale: "Leverage full context throughout execution"

# GEMINI OUTPUT TEMPLATES
gemini_output_templates:
  orchestrator_summary_template: |
    ## 🧠 Gemini Research Orchestrator Analysis
    
    **Enhanced Context Analysis:**
    - Complexity: ${complexity_level} (${complexity_confidence}% confidence)
    - Domain Scope: ${domain_type} requiring ${expertise_required} expertise
    - Quality Target: ${quality_level} with ${validation_needs}
    - Gemini Optimization: ${gemini_suitability} suitability
    
    **Gemini-Optimized Methods:**
    - Primary: ${primary_methods}
    - Enhancement: ${enhancement_methods}
    - Gemini-Specific: ${gemini_optimized_methods}
    - Execution Pattern: ${execution_pattern}
    
    **Adaptive Execution Plan:**
    ${execution_sequence}
    
    **Context-Aware Quality Checkpoints:**
    ${quality_checkpoints}
    
    **Estimated Duration:** ${estimated_duration} (Gemini-optimized)
    
    **Multimodal Capabilities:** ${multimodal_integration}
  
  gemini_method_application_template: |
    ## 🔍 Gemini-Enhanced ${method_name}
    
    **Method Context:** ${method_description}
    **Gemini Optimization:** ${gemini_enhancement_description}
    **Selection Rationale:** ${selection_rationale}
    **Expected Outcome:** ${expected_outcome}
    
    **Contextual Analysis:**
    ${contextual_depth_analysis}
    
    **Method Execution:**
    ${method_execution_content}
    
    **Real-Time Quality Validation:**
    ${quality_validation}
    
    **Adaptive Insights:**
    ${adaptive_recommendations}
  
  gemini_research_activation_template: |
    ## 🌟 Gemini Research Framework Activated
    
    **Detection Method:** ${detection_method}
    **Gemini Advantages:** ${gemini_specific_advantages}
    **Enhanced Approach:** Leveraging large context window and multimodal capabilities
    **Benefits:** ${specific_benefits}
    
    ${orchestrator_summary}

# GEMINI-SPECIFIC WORKFLOWS
gemini_workflows:
  multimodal_research_workflow:
    user_request: "Analyze this business report and research market trends"
    
    gemini_process:
      - detect_multimodal_research_intent:
          triggers: ["document analysis", "market research", "multimodal input"]
          decision: "activate_orchestrator"
          confidence: "high"
          advantage: "Gemini's multimodal capabilities"
      
      - extract_enhanced_context:
          research_topic: "business performance and market trend analysis"
          research_scope: "moderate"
          quality_requirements: "high"
          domain_specificity: "business"
          multimodal_inputs: "document + market data"
          reasoning_depth: "analytical"
      
      - run_gemini_optimized_analysis:
          complexity_level: "moderate"
          domain_type: "business"
          gemini_suitability: "high"
          selected_methods: ["domain_adaptive", "multi_perspective_approach"]
          execution_pattern: "parallel"
      
      - execute_with_gemini_enhancements:
          multimodal_integration: true
          large_context_utilization: true
          real_time_validation: true
          adaptive_quality_control: true
  
  adaptive_research_workflow:
    user_request: "Help me understand the evolving landscape of quantum computing applications"
    
    gemini_process:
      - detect_adaptive_research_need:
          triggers: ["evolving landscape", "emerging technology", "comprehensive understanding"]
          decision: "activate_orchestrator"
          confidence: "high"
          advantage: "Gemini's adaptive reasoning"
      
      - extract_dynamic_context:
          research_topic: "quantum computing applications landscape"
          research_scope: "broad"
          quality_requirements: "high"
          domain_specificity: "emerging"
          temporal_complexity: "high"
          reasoning_depth: "deep"
      
      - run_adaptive_analysis:
          complexity_level: "complex"
          domain_type: "emerging"
          gemini_suitability: "high"
          selected_methods: ["complex_research", "tree_of_thoughts", "iterative_research_refinement"]
          execution_pattern: "adaptive"
      
      - execute_with_adaptive_capabilities:
          real_time_reasoning: true
          context_window_optimization: true
          adaptive_method_selection: true
          continuous_quality_validation: true

# GEMINI QUALITY ASSURANCE
gemini_quality_guidelines:
  leverage_gemini_strengths:
    context_window_utilization:
      - "Utilize full context window for comprehensive analysis"
      - "Maintain coherence across large information sets"
      - "Integrate multiple sources seamlessly"
    
    multimodal_integration:
      - "Process diverse input types effectively"
      - "Maintain consistency across modalities"
      - "Leverage visual and textual information synergistically"
    
    adaptive_reasoning:
      - "Apply real-time adaptation during execution"
      - "Adjust approach based on emerging insights"
      - "Maintain quality while adapting to new information"
    
    pattern_recognition:
      - "Identify complex patterns across large datasets"
      - "Recognize subtle connections and relationships"
      - "Synthesize insights from multiple perspectives"
  
  gemini_specific_validation:
    contextual_consistency:
      - "Verify coherence across entire context window"
      - "Check for logical consistency throughout analysis"
      - "Ensure seamless integration of all information sources"
    
    multimodal_alignment:
      - "Validate consistency between different input types"
      - "Ensure visual and textual information complement each other"
      - "Check for conflicts between modalities"
    
    adaptive_quality_control:
      - "Monitor quality throughout adaptive execution"
      - "Validate adaptations maintain research standards"
      - "Ensure real-time adjustments improve overall quality"

# GEMINI SUCCESS METRICS
gemini_success_metrics:
  gemini_specific_advantages:
    context_window_utilization: "Effectively uses >90% of available context window"
    multimodal_integration: "Successfully integrates diverse input types >85% of time"
    adaptive_reasoning: "Demonstrates real-time adaptation >80% of executions"
    pattern_recognition: "Identifies complex patterns with >90% accuracy"
  
  orchestrator_effectiveness_with_gemini:
    - "Method selection leverages Gemini strengths: >95%"
    - "Quality improvements measurable and consistent: >85%"
    - "Execution follows optimized orchestrator guidance: >90%"
    - "User satisfaction with Gemini-enhanced research: >95%"
  
  integration_success:
    - "Seamless integration with Gemini capabilities: >90%"
    - "Enhanced research quality compared to standard approaches: >80%"
    - "User experience improvement with Gemini optimization: >85%"

# GEMINI ADAPTIVE ORCHESTRATION
gemini_adaptive_orchestration:
  real_time_adaptation:
    gemini_advantages:
      - "Real-time reasoning enables immediate adaptation"
      - "Large context window supports comprehensive re-evaluation"
      - "Multimodal capabilities allow diverse input consideration"
    
    adaptation_triggers:
      - "New information significantly changes context"
      - "User provides additional requirements or constraints"
      - "Method effectiveness below expected thresholds"
      - "Quality validation identifies improvement opportunities"
    
    gemini_specific_adaptations:
      context_expansion:
        trigger: "Additional context becomes available"
        adaptation: "Re-analyze with expanded context window"
        advantage: "Gemini's large context window enables comprehensive re-evaluation"
      
      multimodal_integration:
        trigger: "New input types become available"
        adaptation: "Integrate multimodal inputs into analysis"
        advantage: "Gemini's multimodal capabilities enable seamless integration"
      
      real_time_optimization:
        trigger: "Performance can be improved during execution"
        adaptation: "Adjust methods and approach in real-time"
        advantage: "Gemini's adaptive reasoning enables immediate optimization"

# VERSION COMPATIBILITY
version_compatibility:
  current_version: "2.0.0"
  compatible_versions: ["2.0.0", "2.0.1", "2.0.2"]
  gemini_specific_version: "2.0.0-gemini"
  adapted_from: "claude-orchestrator-integration.yaml v2.0.0"
  gemini_enhancements: "Multimodal capabilities, large context window utilization, adaptive reasoning"
  migration_notes: "Optimized for Gemini's specific capabilities and strengths"