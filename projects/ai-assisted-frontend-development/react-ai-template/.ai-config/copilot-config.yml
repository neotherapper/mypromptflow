# GitHub Copilot Configuration for React AI Development Powerhouse
# Optimized for React + TypeScript development with AI-enhanced workflows

name: "React AI Development Powerhouse - Copilot Configuration"
version: "1.0.0"
description: "GitHub Copilot configuration optimized for React TypeScript development"

# Copilot Settings
copilot:
  enabled: true
  model: "gpt-4"
  features:
    completion: true
    chat: true
    cli: true
    labs: true

# Code Completion Settings
completion:
  inline_suggestions: true
  multi_line_suggestions: true
  context_length: 8192
  language_specific:
    typescript:
      strict_types: true
      interface_generation: true
      generic_support: true
    tsx:
      component_completion: true
      props_interface: true
      hook_suggestions: true
    javascript:
      es6_features: true
      async_await: true
    json:
      schema_validation: true

# Chat Configuration
chat:
  architectural_discussions: true
  code_explanations: true
  debugging_assistance: true
  refactoring_suggestions: true
  performance_optimization: true
  accessibility_guidance: true

# CLI Integration
cli:
  enabled: true
  commands:
    git: true
    npm: true
    testing: true
    deployment: true

# Workspace Settings
workspace:
  framework: "react"
  language: "typescript"
  testing_framework: "jest"
  styling: "tailwindcss"
  state_management: "zustand"
  data_fetching: "react-query"

# Code Quality Settings
quality:
  best_practices: true
  performance_optimization: true
  accessibility_compliance: true
  security_awareness: true
  typescript_strict: true

# AI Workflow Integration
workflows:
  tdd:
    enabled: true
    test_first: true
    ai_test_generation: true
    coverage_optimization: true
  
  performance:
    enabled: true
    core_web_vitals: true
    bundle_optimization: true
    memory_management: true
  
  accessibility:
    enabled: true
    wcag_compliance: true
    aria_attributes: true
    keyboard_navigation: true
  
  documentation:
    enabled: true
    auto_generation: true
    code_comments: true
    readme_updates: true

# Custom Prompts for React Development
prompts:
  component_creation: |
    Create a React component with the following specifications:
    - TypeScript with proper interface definitions
    - Responsive design using Tailwind CSS
    - Performance optimized with React.memo, useMemo, useCallback
    - WCAG 2.1 AA accessibility compliance
    - Comprehensive error handling and loading states
    - Unit tests with React Testing Library
    - JSDoc documentation

  hook_creation: |
    Create a custom React hook with:
    - TypeScript type definitions
    - Error handling and cleanup
    - Performance optimization
    - Comprehensive test coverage
    - JSDoc documentation
    - Example usage

  test_generation: |
    Generate comprehensive test suite including:
    - Unit tests for all functionality
    - Integration tests for user interactions
    - Accessibility tests for WCAG compliance
    - Performance tests for optimization
    - Edge cases and error scenarios
    - 90%+ code coverage

  performance_optimization: |
    Optimize React component for:
    - Minimal re-renders
    - Efficient bundle size
    - Core Web Vitals improvement
    - Memory leak prevention
    - Accessibility performance
    - Loading optimization

# File Type Associations
file_associations:
  "*.tsx": "react_component"
  "*.ts": "typescript_module"
  "*.test.tsx": "react_test"
  "*.test.ts": "typescript_test"
  "*.stories.tsx": "storybook_story"
  "*.spec.tsx": "react_spec"

# Exclusions
exclude:
  directories:
    - "node_modules"
    - "dist"
    - "build"
    - ".git"
    - "coverage"
  files:
    - "*.min.js"
    - "*.bundle.js"
    - "*.d.ts"
    - "package-lock.json"

# Integration Settings
integrations:
  vscode:
    enabled: true
    extensions:
      - "GitHub.copilot"
      - "GitHub.copilot-chat"
      - "ms-vscode.vscode-typescript-next"
  
  git:
    enabled: true
    commit_messages: true
    branch_descriptions: true
    pr_descriptions: true
  
  testing:
    frameworks:
      - "jest"
      - "react-testing-library"
      - "playwright"
    automation: true
    coverage: true

# Performance Monitoring
performance:
  monitoring: true
  suggestions: true
  optimization: true
  metrics:
    - "core_web_vitals"
    - "bundle_size"
    - "memory_usage"
    - "render_performance"

# Security Settings
security:
  vulnerability_detection: true
  dependency_scanning: true
  code_analysis: true
  best_practices: true

# Documentation Settings
documentation:
  auto_generation: true
  jsdoc_comments: true
  readme_updates: true
  api_documentation: true
  example_generation: true

# Learning and Adaptation
learning:
  pattern_recognition: true
  project_specific: true
  team_preferences: true
  coding_standards: true
  performance_patterns: true